{"version":3,"file":"static/js/763.82e853ae.chunk.js","mappings":"oLA4BO,MAAMA,EAKHC,WAAAA,GAAe,KAHfC,UAAW,EAAM,KACjBC,YAAoC,IAErB,CAEvB,kBAAOC,GAIL,OAHKJ,EAAWK,WACdL,EAAWK,SAAW,IAAIL,GAErBA,EAAWK,QACpB,CAEA,oBAAMC,GACJ,IAAIC,KAAKL,SAIT,OAAIK,KAAKJ,cAITI,KAAKJ,YAAc,IAAIK,SAAQ,CAACC,EAASC,KAAY,IAADC,EAAAC,EAElD,GAA0B,QAA1BD,EAAKE,OAAeC,cAAM,IAAAH,GAAU,QAAVC,EAAtBD,EAAwBI,gBAAQ,IAAAH,GAAhCA,EAAkCI,GAGpC,OAFAT,KAAKL,UAAW,OAChBO,IAKF,MAAMQ,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,yCACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAAQ,EAEfL,EAAOM,OAAS,KACdhB,KAAKL,UAAW,EAChBO,KAGFQ,EAAOO,QAAU,KACfd,EAAO,IAAIe,MAAM,wCAGnBP,SAASQ,KAAKC,YAAYV,OA1BnBV,KAAKJ,WA8BhB,CAEA,gBAAMyB,CAAWC,GAA0C,IAADC,EAAAC,EAGxD,SAFMxB,KAAKD,iBAEgB,QAAvBwB,EAAEjB,OAAeC,cAAM,IAAAgB,GAAU,QAAVC,EAAtBD,EAAwBf,gBAAQ,IAAAgB,IAAhCA,EAAkCf,GACrC,MAAM,IAAIS,MAAM,qCAIjBZ,OAAeC,OAAOC,SAASC,GAAGgB,oBAElCnB,OAAeC,OAAOC,SAASC,GAAGY,WAAW,CAC5CK,UAAWJ,EAAOI,UAClBC,SAAUL,EAAOK,SACjBC,YAAaN,EAAOM,cAAe,EACnCC,uBAAwD,IAAjCP,EAAOO,sBAC9BC,QAASR,EAAOQ,SAAW,SAC3BC,QAAS,QACTC,sBAAsB,GAE1B,CAEAC,YAAAA,CAAaC,GAA8D,IAADC,EAAAC,EAAA,IAAvCd,EAA0Be,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,GAA2B,QAAvBF,EAAE7B,OAAeC,cAAM,IAAA4B,GAAU,QAAVC,EAAtBD,EAAwB3B,gBAAQ,IAAA4B,IAAhCA,EAAkC3B,GACrC,MAAM,IAAIS,MAAM,+BAGlB,MAAMsB,GAAiCC,EAAAA,EAAAA,GAAA,CACrCC,MAAO,UACPC,KAAM,QACNC,KAAM,gBACNC,MAAO,IACPC,eAAgB,QACbxB,GAGJhB,OAAeC,OAAOC,SAASC,GAAGwB,aAAaC,EAASM,EAC3D,CAEAO,MAAAA,GAAgB,IAADC,EAAAC,EACb,GAA2B,QAAvBD,EAAE1C,OAAeC,cAAM,IAAAyC,GAAU,QAAVC,EAAtBD,EAAwBxC,gBAAQ,IAAAyC,IAAhCA,EAAkCxC,GACrC,MAAM,IAAIS,MAAM,+BAIjBZ,OAAeC,OAAOC,SAASC,GAAGgB,oBAGlCnB,OAAeC,OAAOC,SAASC,GAAGsC,QAAQG,IACzCC,QAAQC,IAAI,8BAA+BF,IACvCA,EAAaG,kBAAoBH,EAAaI,oBAChDH,QAAQC,IAAI,qEAGlB,CAEA3B,iBAAAA,GAA2B,IAAD8B,EAAAC,EACG,QAAvBD,EAAEjD,OAAeC,cAAM,IAAAgD,GAAU,QAAVC,EAAtBD,EAAwB/C,gBAAQ,IAAAgD,GAAhCA,EAAkC/C,IAGtCH,OAAeC,OAAOC,SAASC,GAAGgB,mBACrC,EAhHWhC,EACIK,cAAQ,EAkHzB,S","sources":["utils/googleAuth.ts"],"sourcesContent":["// Extend the existing window.google type\ninterface GoogleSignIn {\n  accounts: {\n    id: {\n      initialize: (config: any) => void;\n      prompt: () => void;\n      renderButton: (element: HTMLElement, config: any) => void;\n      disableAutoSelect: () => void;\n    };\n  };\n}\n\ninterface GoogleAuthConfig {\n  client_id: string;\n  callback: (response: any) => void;\n  auto_select?: boolean;\n  cancel_on_tap_outside?: boolean;\n  context?: 'signin' | 'signup' | 'use';\n}\n\ninterface GoogleButtonConfig {\n  theme?: 'outline' | 'filled_blue' | 'filled_black';\n  size?: 'large' | 'medium' | 'small';\n  text?: 'signin_with' | 'signup_with' | 'continue_with' | 'signin';\n  width?: number;\n  logo_alignment?: 'left' | 'center';\n}\n\nexport class GoogleAuth {\n  private static instance: GoogleAuth;\n  private isLoaded = false;\n  private loadPromise: Promise<void> | null = null;\n\n  private constructor() {}\n\n  static getInstance(): GoogleAuth {\n    if (!GoogleAuth.instance) {\n      GoogleAuth.instance = new GoogleAuth();\n    }\n    return GoogleAuth.instance;\n  }\n\n  async loadGoogleAuth(): Promise<void> {\n    if (this.isLoaded) {\n      return;\n    }\n\n    if (this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    this.loadPromise = new Promise((resolve, reject) => {\n      // Check if already loaded\n      if ((window as any).google?.accounts?.id) {\n        this.isLoaded = true;\n        resolve();\n        return;\n      }\n\n      // Create script element\n      const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      \n      script.onload = () => {\n        this.isLoaded = true;\n        resolve();\n      };\n      \n      script.onerror = () => {\n        reject(new Error('Failed to load Google Auth library'));\n      };\n\n      document.head.appendChild(script);\n    });\n\n    return this.loadPromise;\n  }\n\n  async initialize(config: GoogleAuthConfig): Promise<void> {\n    await this.loadGoogleAuth();\n    \n    if (!(window as any).google?.accounts?.id) {\n      throw new Error('Google Auth library not available');\n    }\n\n    // Disable auto-select first to ensure fresh login\n    (window as any).google.accounts.id.disableAutoSelect();\n\n    (window as any).google.accounts.id.initialize({\n      client_id: config.client_id,\n      callback: config.callback,\n      auto_select: config.auto_select || false,\n      cancel_on_tap_outside: config.cancel_on_tap_outside !== false,\n      context: config.context || 'signin',\n      ux_mode: 'popup', // Use popup mode for better UX\n      use_fedcm_for_prompt: false, // Disable FedCM for compatibility\n    });\n  }\n\n  renderButton(element: HTMLElement, config: GoogleButtonConfig = {}): void {\n    if (!(window as any).google?.accounts?.id) {\n      throw new Error('Google Auth not initialized');\n    }\n\n    const defaultConfig: GoogleButtonConfig = {\n      theme: 'outline',\n      size: 'large',\n      text: 'continue_with',\n      width: 300,\n      logo_alignment: 'left',\n      ...config,\n    };\n\n    (window as any).google.accounts.id.renderButton(element, defaultConfig);\n  }\n\n  prompt(): void {\n    if (!(window as any).google?.accounts?.id) {\n      throw new Error('Google Auth not initialized');\n    }\n    \n    // Clear any previous state\n    (window as any).google.accounts.id.disableAutoSelect();\n    \n    // Show the One Tap prompt\n    (window as any).google.accounts.id.prompt((notification: any) => {\n      console.log('Google prompt notification:', notification);\n      if (notification.isNotDisplayed() || notification.isSkippedMoment()) {\n        console.log('Google One Tap not displayed, user may need to click the button');\n      }\n    });\n  }\n\n  disableAutoSelect(): void {\n    if (!(window as any).google?.accounts?.id) {\n      return;\n    }\n    (window as any).google.accounts.id.disableAutoSelect();\n  }\n}\n\nexport default GoogleAuth; "],"names":["GoogleAuth","constructor","isLoaded","loadPromise","getInstance","instance","loadGoogleAuth","this","Promise","resolve","reject","_google","_google$accounts","window","google","accounts","id","script","document","createElement","src","async","defer","onload","onerror","Error","head","appendChild","initialize","config","_google2","_google2$accounts","disableAutoSelect","client_id","callback","auto_select","cancel_on_tap_outside","context","ux_mode","use_fedcm_for_prompt","renderButton","element","_google3","_google3$accounts","arguments","length","undefined","defaultConfig","_objectSpread","theme","size","text","width","logo_alignment","prompt","_google4","_google4$accounts","notification","console","log","isNotDisplayed","isSkippedMoment","_google5","_google5$accounts"],"sourceRoot":""}