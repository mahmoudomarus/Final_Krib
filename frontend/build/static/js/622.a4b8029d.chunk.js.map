{"version":3,"file":"static/js/622.a4b8029d.chunk.js","mappings":"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","sources":["components/admin/FinancialAnalytics.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  BarChart3,\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Users,\n  Building,\n  CreditCard,\n  Download,\n  RefreshCw,\n  Target,\n  Activity\n} from 'lucide-react';\nimport { Card } from '../ui/Card';\nimport { Button } from '../ui/Button';\nimport { apiService } from '../../services/api';\nimport { formatCurrency } from '../../lib/utils';\nimport Plot from 'react-plotly.js';\n\ninterface AnalyticsData {\n  revenueAnalytics: {\n    totalRevenue: number;\n    monthlyGrowth: number;\n    yearlyGrowth: number;\n    revenueByMonth: { month: string; revenue: number; transactions: number }[];\n    revenueByProperty: { property: string; revenue: number; bookings: number }[];\n    revenueByHost: { host: string; revenue: number; commission: number }[];\n    revenueByLocation: { city: string; emirate: string; revenue: number }[];\n  };\n  transactionAnalytics: {\n    totalTransactions: number;\n    averageTransactionValue: number;\n    transactionsByType: { type: string; count: number; amount: number }[];\n    transactionsByStatus: { status: string; count: number; percentage: number }[];\n    paymentMethodBreakdown: { method: string; count: number; amount: number; percentage: number }[];\n    failureRate: number;\n    processingTime: { average: number; median: number };\n  };\n  hostAnalytics: {\n    totalHosts: number;\n    activeHosts: number;\n    topPerformingHosts: { host: string; revenue: number; properties: number; rating: number }[];\n    hostCommissionBreakdown: { host: string; totalEarnings: number; commission: number; netEarnings: number }[];\n    newHostsThisMonth: number;\n  };\n  propertyAnalytics: {\n    totalProperties: number;\n    revenuePerProperty: number;\n    topPerformingProperties: { property: string; revenue: number; bookings: number; occupancyRate: number }[];\n    propertyTypeBreakdown: { type: string; count: number; revenue: number; avgPrice: number }[];\n    locationPerformance: { location: string; properties: number; revenue: number; avgBookingValue: number }[];\n  };\n  customerAnalytics: {\n    totalCustomers: number;\n    repeatCustomers: number;\n    customerLifetimeValue: number;\n    customersByLocation: { location: string; count: number; totalSpent: number }[];\n    bookingFrequency: { frequency: string; count: number; percentage: number }[];\n  };\n  stripeAnalytics: {\n    stripeRevenue: number;\n    stripeTransactions: number;\n    stripeFailureRate: number;\n    averageProcessingTime: number;\n    chargebackRate: number;\n    refundRate: number;\n  };\n}\n\ninterface DateRange {\n  start: string;\n  end: string;\n  label: string;\n}\n\nconst FinancialAnalytics: React.FC = () => {\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [selectedDateRange, setSelectedDateRange] = useState<DateRange>({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0],\n    label: 'Last 30 Days'\n  });\n  const [activeView, setActiveView] = useState<'overview' | 'revenue' | 'transactions' | 'hosts' | 'properties' | 'customers'>('overview');\n\n  const dateRanges: DateRange[] = [\n    {\n      start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      end: new Date().toISOString().split('T')[0],\n      label: 'Last 7 Days'\n    },\n    {\n      start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      end: new Date().toISOString().split('T')[0],\n      label: 'Last 30 Days'\n    },\n    {\n      start: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      end: new Date().toISOString().split('T')[0],\n      label: 'Last 90 Days'\n    },\n    {\n      start: new Date(new Date().getFullYear(), 0, 1).toISOString().split('T')[0],\n      end: new Date().toISOString().split('T')[0],\n      label: 'This Year'\n    }\n  ];\n\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [selectedDateRange]);\n\n  const fetchAnalyticsData = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams({\n        startDate: selectedDateRange.start,\n        endDate: selectedDateRange.end\n      });\n\n      const response = await apiService.get(`/super-admin/analytics/financial?${params}`) as { data: AnalyticsData };\n      setAnalyticsData(response.data);\n    } catch (error) {\n      console.error('Error fetching analytics data:', error);\n      // Set realistic mock data for development\n      setAnalyticsData({\n        revenueAnalytics: {\n          totalRevenue: 125000,\n          monthlyGrowth: 15.2,\n          yearlyGrowth: 45.8,\n          revenueByMonth: [\n            { month: 'Jan', revenue: 8500, transactions: 45 },\n            { month: 'Feb', revenue: 12000, transactions: 62 },\n            { month: 'Mar', revenue: 15500, transactions: 78 },\n            { month: 'Apr', revenue: 18200, transactions: 89 },\n            { month: 'May', revenue: 22000, transactions: 105 },\n            { month: 'Jun', revenue: 25500, transactions: 125 }\n          ],\n          revenueByProperty: [\n            { property: 'Marina Heights Apartment', revenue: 15000, bookings: 25 },\n            { property: 'Downtown Villa', revenue: 12500, bookings: 18 },\n            { property: 'JBR Beach Studio', revenue: 10200, bookings: 32 }\n          ],\n          revenueByHost: [\n            { host: 'Ahmed Al-Rashid', revenue: 25000, commission: 3750 },\n            { host: 'Sarah Johnson', revenue: 18500, commission: 2775 },\n            { host: 'Mohammed Hassan', revenue: 15200, commission: 2280 }\n          ],\n          revenueByLocation: [\n            { city: 'Dubai', emirate: 'Dubai', revenue: 85000 },\n            { city: 'Abu Dhabi', emirate: 'Abu Dhabi', revenue: 25000 },\n            { city: 'Sharjah', emirate: 'Sharjah', revenue: 15000 }\n          ]\n        },\n        transactionAnalytics: {\n          totalTransactions: 1250,\n          averageTransactionValue: 850,\n          transactionsByType: [\n            { type: 'Booking Payment', count: 450, amount: 380000 },\n            { type: 'Host Payout', count: 320, amount: 285000 },\n            { type: 'Platform Fee', count: 450, amount: 57000 },\n            { type: 'Refund', count: 30, amount: 25000 }\n          ],\n          transactionsByStatus: [\n            { status: 'Completed', count: 1100, percentage: 88 },\n            { status: 'Pending', count: 85, percentage: 6.8 },\n            { status: 'Failed', count: 45, percentage: 3.6 },\n            { status: 'Cancelled', count: 20, percentage: 1.6 }\n          ],\n          paymentMethodBreakdown: [\n            { method: 'Credit Card', count: 750, amount: 650000, percentage: 60 },\n            { method: 'Bank Transfer', count: 300, amount: 280000, percentage: 24 },\n            { method: 'Digital Wallet', count: 150, amount: 125000, percentage: 12 },\n            { method: 'Cash', count: 50, amount: 45000, percentage: 4 }\n          ],\n          failureRate: 3.6,\n          processingTime: { average: 2.5, median: 1.8 }\n        },\n        hostAnalytics: {\n          totalHosts: 85,\n          activeHosts: 72,\n          topPerformingHosts: [\n            { host: 'Ahmed Al-Rashid', revenue: 25000, properties: 3, rating: 4.9 },\n            { host: 'Sarah Johnson', revenue: 18500, properties: 2, rating: 4.8 },\n            { host: 'Mohammed Hassan', revenue: 15200, properties: 4, rating: 4.7 }\n          ],\n          hostCommissionBreakdown: [\n            { host: 'Ahmed Al-Rashid', totalEarnings: 25000, commission: 3750, netEarnings: 21250 },\n            { host: 'Sarah Johnson', totalEarnings: 18500, commission: 2775, netEarnings: 15725 }\n          ],\n          newHostsThisMonth: 8\n        },\n        propertyAnalytics: {\n          totalProperties: 156,\n          revenuePerProperty: 1850,\n          topPerformingProperties: [\n            { property: 'Marina Heights Apartment', revenue: 15000, bookings: 25, occupancyRate: 85 },\n            { property: 'Downtown Villa', revenue: 12500, bookings: 18, occupancyRate: 78 },\n            { property: 'JBR Beach Studio', revenue: 10200, bookings: 32, occupancyRate: 92 }\n          ],\n          propertyTypeBreakdown: [\n            { type: 'Apartment', count: 85, revenue: 450000, avgPrice: 850 },\n            { type: 'Villa', count: 35, revenue: 380000, avgPrice: 1200 },\n            { type: 'Studio', count: 25, revenue: 180000, avgPrice: 650 },\n            { type: 'Townhouse', count: 11, revenue: 125000, avgPrice: 950 }\n          ],\n          locationPerformance: [\n            { location: 'Dubai Marina', properties: 45, revenue: 385000, avgBookingValue: 950 },\n            { location: 'Downtown Dubai', properties: 28, revenue: 285000, avgBookingValue: 1100 },\n            { location: 'JBR', properties: 22, revenue: 195000, avgBookingValue: 750 }\n          ]\n        },\n        customerAnalytics: {\n          totalCustomers: 2850,\n          repeatCustomers: 1250,\n          customerLifetimeValue: 1850,\n          customersByLocation: [\n            { location: 'UAE', count: 1200, totalSpent: 850000 },\n            { location: 'Saudi Arabia', count: 450, totalSpent: 385000 },\n            { location: 'UK', count: 350, totalSpent: 295000 },\n            { location: 'India', count: 280, totalSpent: 185000 }\n          ],\n          bookingFrequency: [\n            { frequency: 'First Time', count: 1600, percentage: 56.1 },\n            { frequency: '2-3 Times', count: 850, percentage: 29.8 },\n            { frequency: '4-6 Times', count: 280, percentage: 9.8 },\n            { frequency: '7+ Times', count: 120, percentage: 4.2 }\n          ]\n        },\n        stripeAnalytics: {\n          stripeRevenue: 750000,\n          stripeTransactions: 890,\n          stripeFailureRate: 2.1,\n          averageProcessingTime: 1.2,\n          chargebackRate: 0.3,\n          refundRate: 1.8\n        }\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderOverviewTab = () => (\n    <div className=\"space-y-6\">\n      {/* Key Metrics Cards */}\n      {analyticsData && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Revenue</p>\n                <p className=\"text-3xl font-bold\">{formatCurrency(analyticsData.revenueAnalytics.totalRevenue)}</p>\n                <div className={`flex items-center mt-2 ${analyticsData.revenueAnalytics.monthlyGrowth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                  {analyticsData.revenueAnalytics.monthlyGrowth >= 0 ? <TrendingUp className=\"w-4 h-4\" /> : <TrendingDown className=\"w-4 h-4\" />}\n                  <span className=\"text-sm ml-1\">{Math.abs(analyticsData.revenueAnalytics.monthlyGrowth).toFixed(1)}% vs last period</span>\n                </div>\n              </div>\n              <div className=\"p-3 bg-green-100 rounded-full\">\n                <DollarSign className=\"w-6 h-6 text-green-600\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Transactions</p>\n                <p className=\"text-3xl font-bold\">{analyticsData.transactionAnalytics.totalTransactions.toLocaleString()}</p>\n                <div className=\"flex items-center mt-2 text-blue-600\">\n                  <Activity className=\"w-4 h-4\" />\n                  <span className=\"text-sm ml-1\">Avg: {formatCurrency(analyticsData.transactionAnalytics.averageTransactionValue)}</span>\n                </div>\n              </div>\n              <div className=\"p-3 bg-blue-100 rounded-full\">\n                <CreditCard className=\"w-6 h-6 text-blue-600\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Active Hosts</p>\n                <p className=\"text-3xl font-bold\">{analyticsData.hostAnalytics.activeHosts}</p>\n                <div className=\"flex items-center mt-2 text-purple-600\">\n                  <Users className=\"w-4 h-4\" />\n                  <span className=\"text-sm ml-1\">+{analyticsData.hostAnalytics.newHostsThisMonth} this month</span>\n                </div>\n              </div>\n              <div className=\"p-3 bg-purple-100 rounded-full\">\n                <Users className=\"w-6 h-6 text-purple-600\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Properties</p>\n                <p className=\"text-3xl font-bold\">{analyticsData.propertyAnalytics.totalProperties}</p>\n                <div className=\"flex items-center mt-2 text-orange-600\">\n                  <Building className=\"w-4 h-4\" />\n                  <span className=\"text-sm ml-1\">Avg: {formatCurrency(analyticsData.propertyAnalytics.revenuePerProperty)}/property</span>\n                </div>\n              </div>\n              <div className=\"p-3 bg-orange-100 rounded-full\">\n                <Building className=\"w-6 h-6 text-orange-600\" />\n              </div>\n            </div>\n          </Card>\n        </div>\n      )}\n\n      {/* Revenue Trend Chart */}\n      {analyticsData && (\n        <Card className=\"p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Revenue Trend</h3>\n          <Plot\n            data={[\n              {\n                x: analyticsData.revenueAnalytics.revenueByMonth.map(item => item.month),\n                y: analyticsData.revenueAnalytics.revenueByMonth.map(item => item.revenue),\n                type: 'scatter' as const,\n                mode: 'lines+markers' as const,\n                name: 'Revenue (AED)',\n                line: { color: '#3B82F6', width: 3 },\n                marker: { size: 8, color: '#3B82F6' },\n                hovertemplate: '<b>%{x}</b><br>Revenue: AED %{y:,.0f}<extra></extra>'\n              },\n              {\n                x: analyticsData.revenueAnalytics.revenueByMonth.map(item => item.month),\n                y: analyticsData.revenueAnalytics.revenueByMonth.map(item => item.transactions),\n                type: 'scatter' as const,\n                mode: 'lines+markers' as const,\n                name: 'Transactions',\n                yaxis: 'y2',\n                line: { color: '#10B981', width: 2 },\n                marker: { size: 6, color: '#10B981' },\n                hovertemplate: '<b>%{x}</b><br>Transactions: %{y}<extra></extra>'\n              }\n            ] as any}\n            layout={{\n              xaxis: { \n                title: { text: 'Month' },\n                showgrid: true,\n                gridcolor: '#f3f4f6'\n              },\n              yaxis: { \n                title: { text: 'Revenue (AED)' }, \n                side: 'left',\n                showgrid: true,\n                gridcolor: '#f3f4f6',\n                tickformat: ',.0f'\n              },\n              yaxis2: { \n                title: { text: 'Transactions' }, \n                side: 'right', \n                overlaying: 'y',\n                showgrid: false\n              },\n              showlegend: true,\n              height: 400,\n              margin: { t: 20, r: 80, b: 60, l: 80 },\n              plot_bgcolor: 'rgba(0,0,0,0)',\n              paper_bgcolor: 'rgba(0,0,0,0)',\n              font: { family: 'Inter, sans-serif', size: 12 }\n            } as any}\n            config={{ \n              displayModeBar: true,\n              modeBarButtonsToRemove: ['pan2d', 'lasso2d', 'select2d'],\n              displaylogo: false\n            }}\n            style={{ width: '100%' }}\n          />\n        </Card>\n      )}\n\n      {/* Payment Methods & Transaction Status - Interactive Plotly Charts */}\n      {analyticsData && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Payment Methods Distribution</h3>\n            <Plot\n              data={[\n                {\n                  values: analyticsData.transactionAnalytics.paymentMethodBreakdown.map(method => method.percentage),\n                  labels: analyticsData.transactionAnalytics.paymentMethodBreakdown.map(method => method.method),\n                  type: 'pie' as const,\n                  hole: 0.4,\n                  marker: {\n                    colors: ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6']\n                  },\n                  textinfo: 'label+percent',\n                  textposition: 'auto',\n                  hovertemplate: '<b>%{label}</b><br>Amount: AED %{customdata:,.0f}<br>Percentage: %{percent}<extra></extra>',\n                  customdata: analyticsData.transactionAnalytics.paymentMethodBreakdown.map(method => method.amount)\n                }\n              ]}\n              layout={{\n                showlegend: false,\n                height: 350,\n                margin: { t: 20, r: 20, b: 20, l: 20 },\n                plot_bgcolor: 'rgba(0,0,0,0)',\n                paper_bgcolor: 'rgba(0,0,0,0)',\n                font: { family: 'Inter, sans-serif', size: 12 }\n              }}\n              config={{ \n                displayModeBar: false,\n                displaylogo: false\n              }}\n              style={{ width: '100%' }}\n            />\n          </Card>\n\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Transaction Status Breakdown</h3>\n            <Plot\n              data={[\n                {\n                  x: analyticsData.transactionAnalytics.transactionsByStatus.map(status => status.status),\n                  y: analyticsData.transactionAnalytics.transactionsByStatus.map(status => status.count),\n                  type: 'bar' as const,\n                  marker: {\n                    color: analyticsData.transactionAnalytics.transactionsByStatus.map((_, index) => \n                      ['#10B981', '#F59E0B', '#EF4444', '#6B7280'][index] || '#6B7280'\n                    )\n                  },\n                  hovertemplate: '<b>%{x}</b><br>Count: %{y}<br>Percentage: %{customdata}%<extra></extra>',\n                  customdata: analyticsData.transactionAnalytics.transactionsByStatus.map(status => status.percentage)\n                }\n              ]}\n              layout={{\n                xaxis: { \n                  title: { text: 'Status' },\n                  showgrid: false\n                },\n                yaxis: { \n                  title: { text: 'Transaction Count' },\n                  showgrid: true,\n                  gridcolor: '#f3f4f6'\n                },\n                showlegend: false,\n                height: 350,\n                margin: { t: 20, r: 20, b: 60, l: 60 },\n                plot_bgcolor: 'rgba(0,0,0,0)',\n                paper_bgcolor: 'rgba(0,0,0,0)',\n                font: { family: 'Inter, sans-serif', size: 12 }\n              }}\n              config={{ \n                displayModeBar: false,\n                displaylogo: false\n              }}\n              style={{ width: '100%' }}\n            />\n          </Card>\n        </div>\n      )}\n\n      {/* Top Performers */}\n      {analyticsData && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Performing Hosts</h3>\n            <div className=\"space-y-4\">\n              {analyticsData.hostAnalytics.topPerformingHosts.map((host, index) => (\n                <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-medium text-blue-600\">{index + 1}</span>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900\">{host.host}</p>\n                      <p className=\"text-xs text-gray-500\">{host.properties} properties • ⭐ {host.rating}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm font-medium\">{formatCurrency(host.revenue)}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          <Card className=\"p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Performing Properties</h3>\n            <div className=\"space-y-4\">\n              {analyticsData.propertyAnalytics.topPerformingProperties.map((property, index) => (\n                <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                      <span className=\"text-sm font-medium text-green-600\">{index + 1}</span>\n                    </div>\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-900\">{property.property}</p>\n                      <p className=\"text-xs text-gray-500\">{property.bookings} bookings • {property.occupancyRate}% occupancy</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-sm font-medium\">{formatCurrency(property.revenue)}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n            {[...Array(4)].map((_, i) => (\n              <div key={i} className=\"h-32 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n          <div className=\"h-64 bg-gray-200 rounded mb-6\"></div>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div className=\"h-64 bg-gray-200 rounded\"></div>\n            <div className=\"h-64 bg-gray-200 rounded\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Financial Analytics</h2>\n          <p className=\"text-gray-600\">Comprehensive financial insights and performance metrics</p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <select\n            value={selectedDateRange.label}\n            onChange={(e) => {\n              const range = dateRanges.find(r => r.label === e.target.value);\n              if (range) setSelectedDateRange(range);\n            }}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            {dateRanges.map((range) => (\n              <option key={range.label} value={range.label}>\n                {range.label}\n              </option>\n            ))}\n          </select>\n          <Button onClick={fetchAnalyticsData} variant=\"outline\">\n            <RefreshCw className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n          <Button variant=\"outline\">\n            <Download className=\"w-4 h-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Overview', icon: BarChart3 },\n            { id: 'revenue', label: 'Revenue', icon: DollarSign },\n            { id: 'transactions', label: 'Transactions', icon: CreditCard },\n            { id: 'hosts', label: 'Hosts', icon: Users },\n            { id: 'properties', label: 'Properties', icon: Building },\n            { id: 'customers', label: 'Customers', icon: Target }\n          ].map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setActiveView(tab.id as any)}\n              className={`py-2 px-1 border-b-2 font-medium text-sm ${\n                activeView === tab.id\n                  ? 'border-primary-500 text-primary-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center\">\n                <tab.icon className=\"w-4 h-4 mr-2\" />\n                {tab.label}\n              </div>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      {activeView === 'overview' && renderOverviewTab()}\n      {/* Additional tabs would be implemented here */}\n    </div>\n  );\n};\n\nexport default FinancialAnalytics; "],"names":["FinancialAnalytics","analyticsData","setAnalyticsData","useState","loading","setLoading","selectedDateRange","setSelectedDateRange","start","Date","now","toISOString","split","end","label","activeView","setActiveView","dateRanges","getFullYear","useEffect","fetchAnalyticsData","async","params","URLSearchParams","startDate","endDate","response","apiService","get","concat","data","error","console","revenueAnalytics","totalRevenue","monthlyGrowth","yearlyGrowth","revenueByMonth","month","revenue","transactions","revenueByProperty","property","bookings","revenueByHost","host","commission","revenueByLocation","city","emirate","transactionAnalytics","totalTransactions","averageTransactionValue","transactionsByType","type","count","amount","transactionsByStatus","status","percentage","paymentMethodBreakdown","method","failureRate","processingTime","average","median","hostAnalytics","totalHosts","activeHosts","topPerformingHosts","properties","rating","hostCommissionBreakdown","totalEarnings","netEarnings","newHostsThisMonth","propertyAnalytics","totalProperties","revenuePerProperty","topPerformingProperties","occupancyRate","propertyTypeBreakdown","avgPrice","locationPerformance","location","avgBookingValue","customerAnalytics","totalCustomers","repeatCustomers","customerLifetimeValue","customersByLocation","totalSpent","bookingFrequency","frequency","stripeAnalytics","stripeRevenue","stripeTransactions","stripeFailureRate","averageProcessingTime","chargebackRate","refundRate","_jsx","className","children","_jsxs","Array","map","_","i","value","onChange","e","range","find","r","target","Button","onClick","variant","RefreshCw","Download","id","icon","BarChart3","DollarSign","CreditCard","Users","Building","Target","tab","Card","formatCurrency","TrendingUp","TrendingDown","Math","abs","toFixed","toLocaleString","Activity","Plot","x","item","y","mode","name","line","color","width","marker","size","hovertemplate","yaxis","layout","xaxis","title","text","showgrid","gridcolor","side","tickformat","yaxis2","overlaying","showlegend","height","margin","t","b","l","plot_bgcolor","paper_bgcolor","font","family","config","displayModeBar","modeBarButtonsToRemove","displaylogo","style","values","labels","hole","colors","textinfo","textposition","customdata","index"],"sourceRoot":""}